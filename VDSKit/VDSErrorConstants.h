//
//  VDSErrorConstants.h
//  VDSKit
//
//  Created by Erikheath Thomas on 4/17/20.
//  Copyright Â© 2020 Erikheath Thomas. All rights reserved.
//


#import <Foundation/Foundation.h>

NS_ASSUME_NONNULL_BEGIN

#pragma mark - VDSKit Core Errors

FOUNDATION_EXPORT NSString* const VDSKitErrorDomain;

typedef NS_ENUM(NSUInteger, VDSCacheErrorCode) {
    VDSEntryNotFound = 1,
    VDSUnexpectedNilArgument = 2,
    VDSUnableToRemoveObject = 3,
};


#pragma mark - VDSKit Cache Errors -

typedef NSString* const VDSCacheErrorKey;

FOUNDATION_EXPORT VDSCacheErrorKey VDSCacheKeyCanNotBeNilErrorKey;
FOUNDATION_EXPORT VDSCacheErrorKey VDSCacheArgumentCanNotBeNilErrorKey;
FOUNDATION_EXPORT VDSCacheErrorKey VDSCacheObjectInUseErrorKey;

typedef NSString* const VDSCacheErrorMessage;

FOUNDATION_EXPORT VDSCacheErrorMessage VDSNilKeyErrorMessageFormat;

#ifndef VDS_NIL_KEY_MESSAGE
#define VDS_NIL_KEY_MESSAGE(ARGUMENT, METHOD) [NSString stringWithFormat:VDSNilKeyErrorMessageFormat, ARGUMENT, NSStringFromSelector(METHOD)]
#endif


FOUNDATION_EXPORT VDSCacheErrorMessage VDSNilArgumentErrorMessageFormat;

#ifndef VDS_NIL_ARGUMENT_MESSAGE
#define VDS_NIL_ARGUMENT_MESSAGE(ARGUMENT, METHOD) [NSString stringWithFormat:VDSNilArgumentErrorMessageFormat, ARGUMENT, NSStringFromSelector(METHOD)]
#endif

FOUNDATION_EXPORT VDSCacheErrorMessage VDSObjectInUseErrorMessageFormat;

#ifndef VDS_OBJECT_IN_USE_MESSAGE
#define VDS_OBJECT_IN_USE_MESSAGE(OBJECT, KEY) [NSString stringWithFormat:VDSObjectInUseErrorMessageFormat, OBJECT, KEY]
#endif


#pragma mark - VDSOperationErrors -

typedef NS_ENUM(NSUInteger, VDSOperationErrorCode) {
    VDSOperationConditionFailed,
    VDSOperationExecutionFailed,
    VDSOperationEnqueFailed,
    VDSOperationModificationFailed,
};

typedef NSString* const VDSOperationErrorKey;

FOUNDATION_EXPORT VDSOperationErrorKey VDSOperationCouldNotEnqueueErrorKey;
FOUNDATION_EXPORT VDSOperationErrorKey VDSOperationCouldNotModifyOperationErrorKey;
FOUNDATION_EXPORT VDSOperationErrorKey VDSOperationInvalidStateErrorKey;
FOUNDATION_EXPORT VDSOperationErrorKey VDSOperationFailedConditionErrorKey;

typedef NSString* const VDSOperationErrorMessage;

FOUNDATION_EXPORT VDSOperationErrorMessage VDSQueueDelegateBlockedEnquementErrorMessageFormat;

#ifndef VDS_QUEUE_DELEGATE_BLOCKED_ENQUEMENT_MESSAGE
#define VDS_QUEUE_DELEGATE_BLOCKED_ENQUEMENT_MESSAGE(OPERATION_IDENTIFIER, QUEUE_IDENTIFIER) [NSString stringWithFormat:VDSQueueDelegateBlockedEnquementErrorMessageFormat, OPERATION_IDENTIFIER, QUEUE_IDENTIFIER]
#endif


FOUNDATION_EXPORT VDSOperationErrorMessage VDSOperationCouldNotAddObserverErrorMessageFormat;

#ifndef VDS_OPERATION_COULD_NOT_ADD_OBSERVER_MESSAGE
#define VDS_OPERATION_COULD_NOT_ADD_OBSERVER_MESSAGE(OPERATION_IDENTIFIER, OBSERVER_IDENTIFIER) [NSString stringWithFormat:VDSOperationCouldNotAddObserverErrorMessageFormat, OPERATION_IDENTIFIER, OBSERVER_IDENTIFIER]
#endif


FOUNDATION_EXPORT VDSOperationErrorMessage VDSOperationCouldNotRemoveObserverErrorMessageFormat;

#ifndef VDS_OPERATION_COULD_NOT_REMOVE_OBSERVER_MESSAGE
#define VDS_OPERATION_COULD_NOT_REMOVE_OBSERVER_MESSAGE(OPERATION_IDENTIFIER, OBSERVER_IDENTIFIER) [NSString stringWithFormat:VDSOperationCouldNotRemoveObserverErrorMessageFormat, OPERATION_IDENTIFIER, OBSERVER_IDENTIFIER]
#endif


FOUNDATION_EXPORT VDSOperationErrorMessage VDSOperationCouldNotAddConditionErrorMessageFormat;

#ifndef VDS_OPERATION_COULD_NOT_ADD_CONDITION_MESSAGE
#define VDS_OPERATION_COULD_NOT_ADD_CONDITION_MESSAGE(OPERATION_IDENTIFIER, CONDITION_IDENTIFIER) [NSString stringWithFormat:VDSOperationCouldNotAddConditionErrorMessageFormat, OPERATION_IDENTIFIER, CONDITION_IDENTIFIER]
#endif


FOUNDATION_EXPORT VDSOperationErrorMessage VDSOperationCouldNotRemoveConditionErrorMessageFormat;

#ifndef VDS_OPERATION_COULD_NOT_REMOVE_CONDITION_MESSAGE
#define VDS_OPERATION_COULD_NOT_REMOVE_CONDITION_MESSAGE(OPERATION_IDENTIFIER, CONDITION_IDENTIFIER) [NSString stringWithFormat:VDSOperationCouldNotRemoveConditionErrorMessageFormat, OPERATION_IDENTIFIER, CONDITION_IDENTIFIER]
#endif


FOUNDATION_EXPORT VDSOperationErrorMessage VDSOperationCouldNotAddDependencyErrorMessageFormat;

#ifndef VDS_OPERATION_COULD_NOT_ADD_DEPENDENCY_MESSAGE
#define VDS_OPERATION_COULD_NOT_ADD_DEPENDENCY_MESSAGE(OPERATION_IDENTIFIER, DEPENDENCY_IDENTIFIER) [NSString stringWithFormat:VDSOperationCouldNotAddDependencyErrorMessageFormat, OPERATION_IDENTIFIER, DEPENDENCY_IDENTIFIER]
#endif


FOUNDATION_EXPORT VDSOperationErrorMessage VDSOperationCouldNotExecuteOperationWithStateErrorMessageFormat;

#ifndef VDS_OPERATION_COULD_NOT_EXECUTE_OPERATION_WITH_STATE_MESSAGE
#define VDS_OPERATION_COULD_NOT_EXECUTE_OPERATION_WITH_STATE_MESSAGE(OPERATION_IDENTIFIER, STATE_IDENTIFIER) [NSString stringWithFormat:VDSOperationCouldNotExecuteOperationWithStateErrorMessageFormat, OPERATION_IDENTIFIER, STATE_IDENTIFIER]
#endif


FOUNDATION_EXPORT VDSOperationErrorMessage VDSOperationCouldNotEvaluateConditionsWithStateErrorMessageFormat;

#ifndef VDS_OPERATION_COULD_NOT_EVALUATE_CONDITIONS_WITH_STATE_MESSAGE
#define VDS_OPERATION_COULD_NOT_EVALUATE_CONDITIONS_WITH_STATE_MESSAGE(OPERATION_IDENTIFIER, STATE_IDENTIFIER) [NSString stringWithFormat:VDSOperationCouldNotEvaluateConditionsWithStateErrorMessageFormat, OPERATION_IDENTIFIER, STATE_IDENTIFIER]
#endif


FOUNDATION_EXPORT VDSOperationErrorMessage VDSOperationCouldNotTransitionToStateErrorMessageFormat;

#ifndef VDS_OPERATION_COULD_NOT_TRANSTION_TO_STATE_MESSAGE
#define VDS_OPERATION_COULD_NOT_TRANSTION_TO_STATE_MESSAGE(OPERATION_IDENTIFIER, CURRENT_STATE_IDENTIFIER, NEW_STATE_IDENTIFIER) [NSString stringWithFormat:VDSOperationCouldNotTransitionToStateErrorMessageFormat, OPERATION_IDENTIFIER, CURRENT_STATE_IDENTIFIER, NEW_STATE_IDENTIFIER]
#endif


FOUNDATION_EXPORT VDSOperationErrorMessage VDSOperationCouldNotSatisfyConditionErrorMessageFormat;

#ifndef VDS_OPERATION_COULD_NOT_SATISFY_CONDITION_MESSAGE
#define VDS_OPERATION_COULD_NOT_SATISFY_CONDITION_MESSAGE(OPERATION_IDENTIFIER, CONDITION_IDENTIFIER) [NSString stringWithFormat:VDSOperationCouldNotSatisfyConditionErrorMessageFormat, OPERATION_IDENTIFIER, CONDITION_IDENTIFIER]
#endif


NS_ASSUME_NONNULL_END

